# A generic, single database configuration.

[alembic]
# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false


# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic,flask_migrate

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[logger_flask_migrate]
level = INFO
handlers =
qualname = flask_migrate

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S


'''
# Alembic general configuration
[alembic]

# Logger configurations (will be used below)
[loggers]
keys = root,sqlalchemy,alembic,flask_migrate

# Handlers are the mechanisms that process and output log messages
[handlers]
keys = console

# Formatters define how log messages are formatted before being output
[formatters]
keys = generic

# The root logger configuration
[logger_root]
level = WARN
handlers = console
qualname =

# SQLAlchemy-specific logger configuration
[logger_sqlalchemy]
level = WARN
handlers =  # No specific handlers, will use root logger
qualname = sqlalchemy.engine  # Logger name

# Alembic-specific logger configuration
[logger_alembic]
level = INFO  # Alembic logs at INFO level
handlers =  # No specific handlers, will use root logger
qualname = alembic  # Logger name

# Flask-Migrate-specific logger configuration
[logger_flask_migrate]
level = INFO  # Flask-Migrate logs at INFO level
handlers =  # No specific handlers, will use root logger
qualname = flask_migrate  # Logger name

# Configuration for the console output handler
[handler_console]
class = StreamHandler  # Output log messages to stderr
args = (sys.stderr,)  # Send the log to standard error
level = NOTSET  # Log everything (since level is NOTSET)
formatter = generic  # Use the "generic" formatter below

# Formatter configuration for log messages
[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s  # Format: level, name, and message
datefmt = %H:%M:%S  # Time format for logs
'''